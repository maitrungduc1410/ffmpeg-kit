name: ios build scripts

on:
  push:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/ios-build-scripts.yml'
      - 'apple/**'
      - '!apple/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'apple.sh'
      - 'ios.sh'
  pull_request:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/ios-build-scripts.yml'
      - 'apple/**'
      - '!apple/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'apple.sh'
      - 'ios.sh'

jobs:
  # build-main-on-macos-sonoma:
  #   name: ios main on sonoma
  #   runs-on: macos-14
  #   strategy:
  #     matrix:
  #       xcode: [ '15.4', '16.0' ]
  #   defaults:
  #     run:
  #       shell: bash
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: prerequisites
  #       run: brew install autoconf automake libtool pkg-config curl git cmake nasm
  #     - name: set up xcode
  #       run: echo "export DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
  #     - name: run the build script
  #       run: ./ios.sh --xcframework --enable-ios-audiotoolbox --enable-ios-avfoundation --enable-ios-bzip2 --enable-ios-libiconv --enable-ios-videotoolbox --enable-ios-zlib
  #     - name: print build logs
  #       if: ${{ always() }}
  #       run: cat build.log
  #     - name: print ffbuild logs
  #       if: ${{ failure() }}
  #       run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'

  build-main-on-macos-latest-https:
    name: ios main on latest https
    runs-on: macos-latest
    strategy:
      matrix:
        xcode: [ '16.2' ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: prerequisites
        run: brew install autoconf automake libtool pkg-config curl git cmake nasm gcc gperf texinfo yasm bison autogen wget gettext meson ninja ragel gtk-doc libtasn1
      - name: set up xcode
        run: echo "export DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
      - name: run the build script
        run: ./ios.sh --xcframework --enable-ios-audiotoolbox --enable-ios-avfoundation --enable-ios-bzip2 --enable-ios-libiconv --enable-ios-videotoolbox --enable-ios-zlib --no-bitcode --enable-openssl
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-latest-https-xcframework
          path: |
            prebuilt/bundle-apple-xcframework-ios

  build-main-on-macos-ventura:
    name: ios main on ventura
    runs-on: macos-13
    strategy:
      matrix:
        xcode: [ '15.2' ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: prerequisites
        run: brew install autoconf automake libtool pkg-config curl git cmake nasm gcc gperf texinfo yasm bison autogen wget gettext meson ninja ragel gtk-doc libtasn1
      - name: set up xcode
        run: echo "export DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
      - name: run the build script
        run: ./ios.sh --xcframework --enable-ios-audiotoolbox --enable-ios-avfoundation --enable-ios-bzip2 --enable-ios-libiconv --enable-ios-videotoolbox --enable-ios-zlib --no-bitcode --enable-openssl
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-https-xcframework
          path: |
            prebuilt/bundle-apple-xcframework-ios

  # build-lts-on-macos-monterey:
  #   name: ios lts on monterey
  #   runs-on: macos-12
  #   strategy:
  #     matrix:
  #       xcode: [ '13.4.1', '14.2' ]
  #   defaults:
  #     run:
  #       shell: bash
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: prerequisites
  #       run: brew install autoconf automake libtool pkg-config curl git cmake nasm
  #     - name: set up xcode
  #       run: echo "export DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
  #     - name: run the build script
  #       run: ./ios.sh --lts --enable-ios-audiotoolbox --enable-ios-bzip2 --enable-ios-libiconv --enable-ios-zlib
  #     - name: print build logs
  #       if: ${{ always() }}
  #       run: cat build.log
  #     - name: print ffbuild logs
  #       if: ${{ failure() }}
  #       run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
